import React from 'react';

export const Intro= () => {
  return(
    <div>
        <div id="doc" className="markdown-body container-fluid" style={{position: 'relative'}}><h1 id="Intro-to-JavaScript"><a className="anchor hidden-xs" href="#Intro-to-JavaScript" title="Intro-to-JavaScript"><span className="octicon octicon-link" /></a>Intro to JavaScript</h1><h2 id="Learning-Goals"><a className="anchor hidden-xs" href="#Learning-Goals" title="Learning-Goals"><span className="octicon octicon-link" /></a>Learning Goals</h2><p>After this lesson, you will be able to:</p><ul>
            <li>Explain what JavaScript is, and a bit of its history.</li>
            <li>Explain what ES2015 is and understand how JavaScript is evolving.</li>
            <li>Use and comprehend basic JavaScript syntax and grammar.</li>
          </ul><h2 id="What-is-JavaScript"><a className="anchor hidden-xs" href="#What-is-JavaScript" title="What-is-JavaScript"><span className="octicon octicon-link" /></a>What is JavaScript?</h2><p>JavaScript is an <a href="https://en.wikipedia.org/wiki/Object-oriented_programming" target="_blank">Object Oriented</a>, <a href="https://en.wikipedia.org/wiki/Dynamic_programming_language" target="_blank">dynamic</a> programming language created in 1995. Until 2009, JavaScript ran only in your browser. It’s used to manipulate your web page, create an interactive experience, and do annoying things like display pop up ads.</p><p><img src="https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/upload_6be102b3fd682750a909b3c3d612ed20.jpg" alt width={400} /></p><p>Some examples of JavaScript in the wild include Gmail. When you get a new email in Gmail, you don’t have to refresh the page. It is just <strong>retrieved from a server</strong>, and <strong>appears on your page</strong>. Both of the bolded functions are things JavaScript is capable of doing.</p><h3 id="What-JavaScript-is-not"><a className="anchor hidden-xs" href="#What-JavaScript-is-not" title="What-JavaScript-is-not"><span className="octicon octicon-link" /></a>What JavaScript is <em>not</em></h3><p>JavaScript and Java have <em>almost</em> no relation. They are <strong>not</strong> the same language and run (often times) in different environments.</p><blockquote>
            <p>“Java is to JavaScript what Car is to Carpet” - <a href="https://www.christianheilmann.com/about-this/" target="_blank">Chris Heilmann</a></p>
          </blockquote><h4 id="The-Name"><a className="anchor hidden-xs" href="#The-Name" title="The-Name"><span className="octicon octicon-link" /></a>The Name</h4><p>JavaScript was created under the codename <strong>Mocha</strong>. When released it became <em>LiveScript</em>, and shortly after JavaScript.</p><p>The name is believed to be a plot to capitalize on some of the popularity of Java, which was surging in usage at the time. It’s syntax is based on C and Java, leading to further confusion, because this is where any similarity ends.</p><h2 id="The-History-of-JavaScript"><a className="anchor hidden-xs" href="#The-History-of-JavaScript" title="The-History-of-JavaScript"><span className="octicon octicon-link" /></a>The History of JavaScript</h2><h3 id="1995-The-Beginnings"><a className="anchor hidden-xs" href="#1995-The-Beginnings" title="1995-The-Beginnings"><span className="octicon octicon-link" /></a>1995: The Beginnings</h3><p>JavaScript was created in 1995 by <a href="https://en.wikipedia.org/wiki/Brendan_Eich" target="_blank">Brendan Eich</a>, who was working for <a href="https://en.wikipedia.org/wiki/Netscape" target="_blank">Netscape</a> (a web browser company). Eich created the language <em>in 10 days</em>. Netscape created JavaScript to “glue” the web (HTML &amp; CSS) together. At this point, the web was just a series of boring documents tied together with links.</p><p>JavaScript at the time of its invention only ran in the <strong>browser</strong>. It means unlike server side languages (Ruby, Python, Go, etc), it could not run on a server (computer meant for running applications).</p><h3 id="2005-The-AJAX-Revolution"><a className="anchor hidden-xs" href="#2005-The-AJAX-Revolution" title="2005-The-AJAX-Revolution"><span className="octicon octicon-link" /></a>2005: The AJAX Revolution</h3><p>In 1999, Microsoft invented <code>XMLHttpRequest</code> to use on its Outlook email client. This allowed easy communication between the client and the server to create features such as retrieving emails without navigating to a different page. While this may seem trivial now, it was not at the time and changed the way web apps were designed forever.</p><p>Around 2005, <code>AJAX</code>, a series of technologies built around <code>XMLHttpRequest</code> for creating interactive apps, was standardized. This new way of developing web apps allowed the creation of  Gmail, Google Maps, Twitter, Facebook, and many more web applications. We’ll learn more about AJAX later on in the course.</p><h3 id="Node-JS"><a className="anchor hidden-xs" href="#Node-JS" title="Node-JS"><span className="octicon octicon-link" /></a>Node JS</h3><p>In 2009, JavaScript took an interesting turn. Ryan Dahl of Joyent took the <code>V8 JavaScript Engine</code> that Google Chrome uses to run JavaScript in the browser and brought it to the server. This created an environment for JavaScript to run anywhere, and called it <strong>NodeJS</strong>.</p><p>NodeJS allowed JavaScript to be used everywhere: servers, phones, and even robots! NodeJS has <a href="https://www.google.com/trends/explore?date=all&q=NodeJS" target="_blank">kept climbing in popularity</a> since its release and it’s developing a large following and community.</p><h3 id="ES2015-Further-evolutions-of-JavaScript"><a className="anchor hidden-xs" href="#ES2015-Further-evolutions-of-JavaScript" title="ES2015-Further-evolutions-of-JavaScript"><span className="octicon octicon-link" /></a>ES2015: Further evolutions of JavaScript</h3><p>After JavaScript’s creation, Eich and Netscape submitted JavaScript to a standards committee by the name of <strong>Ecma International</strong> in hopes of becoming the industry standard for browser languages. Back in 1995, the internet was the wild west. Few standards were implemented, and the browser was a hostile place to work.</p><p>The language was standardized under the name of <strong>Ecmascript</strong> from then forward. In technical terms, Ecmascript is the standard and JavaScript is the implementation of that standard. You can’t “run” Ecmascript, and many other, lesser known languages are based off of it.</p><p>JavaScript is a pretty weird language when it comes to changes. Making changes to the language that aren’t backwards compatible could have massive negative effects on the thousands of webpages that depend on it. This means Ecma International only approves changes that don’t break backwards compatibility.</p><p>JavaScript has gone through many evolutions, the most recent of which being ES6 which stands for Ecmascript Version 6.</p><p>In short, most of the code you will see and most of the current code on the Internet is in ES5 or below. Code written from now going forward (will ideally) be written in ES2015+ (another, preferred name for ES6). We will get into details later on, but ES2015 helps eliminate some of the crazy pitfalls of JavaScript, improve certain bits of verbose or confusing JavaScript syntax, and adds a host of new features.</p><h2 id="Basic-Syntax"><a className="anchor hidden-xs" href="#Basic-Syntax" title="Basic-Syntax"><span className="octicon octicon-link" /></a>Basic Syntax</h2><p>As stated earlier, JavaScript’s syntax is based on  C or Java. This means quite a few curly braces <code>{'{'}</code>, parentheses <code>()</code>, and semicolons <code>;</code>.</p><p>The semicolon is not mandatory in 99.5% of cases, but you should absolutely include it.</p><p>Parentheses and curly braces <em><strong>are mandatory</strong></em> and will cause an error if they’re left out. Be mindful of starting / ending these in the right place.</p><h2 id="Output"><a className="anchor hidden-xs" href="#Output" title="Output"><span className="octicon octicon-link" /></a>Output</h2><p>We will use a function called <code>console.log</code> to output results and messages. In Chrome, the output will be to our <code>console</code>, in Node the output will be to our terminal.</p><p>Example:</p><iframe height={265} src="https://repl.it/@ta_web_mad/Introduction1Example?lite=true" allowFullScreen="true" style={{width: '100%'}}>
          </iframe><p><strong>Heads Up!</strong><br />
            Click the <strong>edit on replit</strong> link to play with the code on the website</p><h2 id="Summary"><a className="anchor hidden-xs" href="#Summary" title="Summary"><span className="octicon octicon-link" /></a>Summary</h2><p>In this lesson we have learnt what JavaScript is by reading some history and use some of its basic syntax. JavaScript is an interesting language with many quirks which you will discover in upcoming lessons.</p><h2 id="Extra-Resources"><a className="anchor hidden-xs" href="#Extra-Resources" title="Extra-Resources"><span className="octicon octicon-link" /></a>Extra Resources</h2><ul>
            <li><a href="http://www.howtocreate.co.uk/jshistory.html" target="_blank">Javascript History</a></li>
            <li><a href="https://developer.mozilla.org/en-US/docs/Web/JavaScript" target="_blank">MDN</a> - This will be your main resource for any Javascript search. It has tutorials, guides and tools. Is the formal Javascript Documentation.</li>
          </ul></div>
        <div className="ui-toc dropup unselectable hidden-print" style={{display: 'none'}}>
          <div className="pull-right dropdown">
            <a id="tocLabel" className="ui-toc-label btn btn-default" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false" title="Table of content">
              <i className="fa fa-bars" />
            </a>
            <ul id="ui-toc" className="ui-toc-dropdown dropdown-menu" aria-labelledby="tocLabel">
              <div className="toc"><ul className="nav"><li className><a href="#Intro-to-JavaScript" title="Intro to JavaScript">Intro to JavaScript</a><ul className="nav"><li><a href="#Learning-Goals" title="Learning Goals">Learning Goals</a></li><li><a href="#What-is-JavaScript" title="What is JavaScript?">What is JavaScript?</a><ul className="nav"><li><a href="#What-JavaScript-is-not" title="What JavaScript is not">What JavaScript is not</a></li></ul></li><li><a href="#The-History-of-JavaScript" title="The History of JavaScript">The History of JavaScript</a><ul className="nav"><li><a href="#1995-The-Beginnings" title="1995: The Beginnings">1995: The Beginnings</a></li><li><a href="#2005-The-AJAX-Revolution" title="2005: The AJAX Revolution">2005: The AJAX Revolution</a></li><li><a href="#Node-JS" title="Node JS">Node JS</a></li><li><a href="#ES2015-Further-evolutions-of-JavaScript" title="ES2015: Further evolutions of JavaScript">ES2015: Further evolutions of JavaScript</a></li></ul></li><li><a href="#Basic-Syntax" title="Basic Syntax">Basic Syntax</a></li><li className><a href="#Output" title="Output">Output</a></li><li><a href="#Summary" title="Summary">Summary</a></li><li className><a href="#Extra-Resources" title="Extra Resources">Extra Resources</a></li></ul></li></ul></div><div className="toc-menu"><a className="expand-toggle" href="#">Expand all</a><a className="back-to-top" href="#">Back to top</a><a className="go-to-bottom" href="#">Go to bottom</a></div>
            </ul>
          </div>
        </div>
        <div id="ui-toc-affix" className="ui-affix-toc ui-toc-dropdown unselectable hidden-print" data-spy="affix" style={{top: 17, display: 'none'}}>
          <div className="toc"><ul className="nav"><li className><a href="#Intro-to-JavaScript" title="Intro to JavaScript">Intro to JavaScript</a><ul className="nav"><li><a href="#Learning-Goals" title="Learning Goals">Learning Goals</a></li><li><a href="#What-is-JavaScript" title="What is JavaScript?">What is JavaScript?</a><ul className="nav"><li><a href="#What-JavaScript-is-not" title="What JavaScript is not">What JavaScript is not</a></li></ul></li><li><a href="#The-History-of-JavaScript" title="The History of JavaScript">The History of JavaScript</a><ul className="nav"><li><a href="#1995-The-Beginnings" title="1995: The Beginnings">1995: The Beginnings</a></li><li><a href="#2005-The-AJAX-Revolution" title="2005: The AJAX Revolution">2005: The AJAX Revolution</a></li><li><a href="#Node-JS" title="Node JS">Node JS</a></li><li><a href="#ES2015-Further-evolutions-of-JavaScript" title="ES2015: Further evolutions of JavaScript">ES2015: Further evolutions of JavaScript</a></li></ul></li><li><a href="#Basic-Syntax" title="Basic Syntax">Basic Syntax</a></li><li className><a href="#Output" title="Output">Output</a></li><li><a href="#Summary" title="Summary">Summary</a></li><li className><a href="#Extra-Resources" title="Extra Resources">Extra Resources</a></li></ul></li></ul></div><div className="toc-menu"><a className="expand-toggle" href="#">Expand all</a><a className="back-to-top" href="#">Back to top</a><a className="go-to-bottom" href="#">Go to bottom</a></div>
        </div>
      </div>
  )
}