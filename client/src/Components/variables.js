import React from 'react';

export const Variables = () => {
  return (
    <div>
    <div id="doc" className="markdown-body container-fluid" style={{position: 'relative'}}><h1 id="Variables"><a className="anchor hidden-xs" href="#Variables" title="Variables"><span className="octicon octicon-link" /></a>Variables</h1><h2 id="Learning-Goals"><a className="anchor hidden-xs" href="#Learning-Goals" title="Learning-Goals"><span className="octicon octicon-link" /></a>Learning Goals</h2><p>After this lesson, you will be able to:</p><ul>
            <li>Explain what a variable is.</li>
            <li>Understand what “dynamically typed” means.</li>
            <li>Declare variables in JavaScript.</li>
          </ul><h2 id="Introduction"><a className="anchor hidden-xs" href="#Introduction" title="Introduction"><span className="octicon octicon-link" /></a>Introduction</h2><p>In this lesson we will learn what a variable is, how to create variables, and how to use them.</p><p>We will understand the different parts (name and value) of a variable and how they are related. We will also see how to give and change a value in a variable.</p><div className="alert alert-info">
            <p><strong>The <code>console.log</code> command</strong></p>
            <p>Along this lesson, you will see the following command:</p>
            <pre><code>console.log( ... ){"\n"}</code></pre>
            <p>We will explain more about the <code>console</code> object later on, but for now you just need to know it is a command that allow us to print a value, or a variable’s value.</p>
          </div><h2 id="What-is-a-variable"><a className="anchor hidden-xs" href="#What-is-a-variable" title="What-is-a-variable"><span className="octicon octicon-link" /></a>What is a variable?</h2><p>We can think of a variable in any programming language as a <em>name</em> for a <em>value</em>.</p><p>We can also think that the variable is like a box. Think about a box that you use for storage in your house. Maybe you have a box with a label on it, “Wedding Photos”.</p><p><img src="https://s3-eu-west-1.amazonaws.com/ih-materials/uploads/upload_e5a71d93af8f601bb2a52b9887eacc9a.jpg" alt /></p><p>When you get the urge to take a look at your wedding photos, you know which one to grab. The box is just a container for those wedding photos. I <em>could</em> put baby pictures in my “Wedding Photos” box, but that wouldn’t make much sense.</p><h3 id="Name"><a className="anchor hidden-xs" href="#Name" title="Name"><span className="octicon octicon-link" /></a>Name</h3><p>A <strong>name</strong> is a reference for a variable. We can use whatever text we want to use as a variable name:</p><pre><code className="javascript hljs"><span className="token keyword">var</span> companyName <span className="token operator">=</span> <span className="token string">"Ironhack"</span><span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> age <span className="token operator">=</span> <span className="token number">3</span><span className="token punctuation">;</span>{"\n"}</code></pre><p>The name does not determine the type of value. For instance, you can do:</p><pre><code className="javascript hljs"><span className="token keyword">var</span> companyName <span className="token operator">=</span> <span className="token number">3</span><span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> age <span className="token operator">=</span> <span className="token string">"Ironhack"</span><span className="token punctuation">;</span>{"\n"}</code></pre><p>These variables are totally valid, but it doesn’t make sense to name a variable <code>companyName</code> and have a number assigned to it, instead of a string, right?</p><h3 id="Value"><a className="anchor hidden-xs" href="#Value" title="Value"><span className="octicon octicon-link" /></a>Value</h3><p>A <strong>value</strong> can be any of the JavaScript value types: <code>string</code>, <code>number</code>, <code>array</code>, <code>object</code>, etc.</p><div className="alert alert-success">
            <p>We will learn all these value types during the course, so don’t worry if you don’t understand what arrays or objects are right now.</p>
          </div><h2 id="Declaring-a-Variable"><a className="anchor hidden-xs" href="#Declaring-a-Variable" title="Declaring-a-Variable"><span className="octicon octicon-link" /></a>Declaring a Variable</h2><p>Before you use a variable in a JavaScript program, you must declare it. Variables are declared with the <code>var</code> keyword:</p><pre><code className="javascript hljs"><span className="token keyword">var</span> name<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> age<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> email<span className="token punctuation">;</span>{"\n"}</code></pre><p>We can also declare multiple variables with the same <code>var</code> keyword:</p><pre><code className="javascript hljs"><span className="token keyword">var</span> name<span className="token punctuation">,</span> age<span className="token punctuation">,</span> email<span className="token punctuation">;</span>{"\n"}</code></pre><p>Storing a value in a variable is called <em>variable initialization</em>. You can do variable initialization at the time of variable creation or at a later point in time when you need that variable.</p><p>For instance, you might create a variable <code>name</code> and assign the value <code>Ironhacker</code> to it later.</p><div className="alert alert-danger">
            <p><img alt=":warning:" className="emoji" src="https://cdnjs.cloudflare.com/ajax/libs/emojify.js/1.1.0/images/basic/warning.png" title=":warning:" /> We just need to use <code>var</code> (declare a variable) in the initialization (first time we declare a variable). After the variable is initialized, we just need to use the <strong>name</strong> (label) of that variable to use it.</p>
          </div><p>For another variable, you can assign a value at the time of initialization:</p><iframe height={500} src="https://repl.it/@ta_web_mad/Variables1example?lite=true" allowFullScreen="true" style={{width: '100%'}}>.
          </iframe><p>If you don’t assign a value to a variable when you initialize it, its default value will be <code>undefined</code>.</p><iframe height={265} src="https://repl.it/@ta_web_mad/Variables2exampleundefined?lite=true" allowFullScreen="true" style={{width: '100%'}}>.
          </iframe><h2 id="Names"><a className="anchor hidden-xs" href="#Names" title="Names"><span className="octicon octicon-link" /></a>Names</h2><p>Rules for naming variables are easy:</p><ol>
            <li>Names can contain letters (uppercase and lowercase), numbers, and the symbols <code>_</code> and <code>$</code>.</li>
            <li>Names cannot start with a number.</li>
          </ol><p>JavaScript allows a <a href="http://mathiasbynens.be/notes/javascript-identifiers" target="_blank">large variety</a> of characters as variable names, so if you need to use <code>ñ</code>, <code>ö</code> or even <code>π</code>, you can, but <strong>is highly discouraged because others might not be able to use these characters</strong>. That is why we should develop in English :)</p><p>Make sure your editor saves files with <a href="https://en.wikipedia.org/wiki/UTF-8" target="_blank"><strong>UTF-8</strong></a> encoding. All these examples are valid variable names:</p><pre><code className="javascript hljs"><span className="token keyword">var</span> a<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> color<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> _private<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> $button<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> getTop10<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> a_large_name<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> thisWayIsCalledCamelCase<span className="token punctuation">;</span>{"\n"}<span className="token keyword">var</span> π<span className="token punctuation">;</span>{"\n"}</code></pre><p>Notice JavaScript is <strong><a href="https://en.wikipedia.org/wiki/Case_sensitivity" target="_blank">case sensitive</a></strong> so capital letters do make a difference. For example, <code>color</code> and <code>Color</code> are different variable names.</p><h3 id="Naming-variables"><a className="anchor hidden-xs" href="#Naming-variables" title="Naming-variables"><span className="octicon octicon-link" /></a>Naming variables</h3><p>When creating a variable with more than one word, we use the <a href="https://en.wikipedia.org/wiki/Camel_case" target="_blank">“camelCase”</a> style. Words or abbreviations in the middle of the phrase begin with a capital letter. The purpose of this practice is to enhance readability. Take a look at the different naming styles:</p><ul>
            <li>camelCase</li>
            <li>PascalCase</li>
            <li>snake_case</li>
          </ul><p>Also, naming variables is hard. It is in fact one of the hardest things in the programming world. You should try your best to name variables in a meaningful way. Variable names like <code>i</code>, <code>j</code>, <code>k</code>, (some exceptions to these), <code>something</code>, <code>object</code> or <code>variable</code> do not give any indication as to what the value of that variable is. <strong>You are more than likely <em>not going to be the only person reading your code</em>.</strong></p><iframe height={500} src="https://repl.it/@ta_web_mad/Variables3example?lite=true" allowFullScreen="true" style={{width: '100%'}}>
          </iframe><p><strong>VS</strong></p><iframe height={500} src="https://repl.it/@ta_web_mad/Variables4example?lite=true" allowFullScreen="true" style={{width: '100%'}}>
          </iframe><h2 id="Changing-Values"><a className="anchor hidden-xs" href="#Changing-Values" title="Changing-Values"><span className="octicon octicon-link" /></a>Changing Values</h2><p>The value of a variable can be changed whenever you want. To change a variable value, we just need to reference the variable by its name and assign a new value:</p><iframe height={400} src="https://repl.it/@ta_web_mad/Variables5example?lite=true" allowFullScreen="true" style={{width: '100%'}}>
          </iframe><h3 id="Dynamic-Typing"><a className="anchor hidden-xs" href="#Dynamic-Typing" title="Dynamic-Typing"><span className="octicon octicon-link" /></a>Dynamic Typing</h3><p>JavaScript is a <strong>dynamically typed language</strong>.</p><p>One of the main characteristics of that is that all variables are dynamic: you can assign a type of value to a variable and, later on, change the type of value. The type of a variable will get determined automatically while the program is being processed. You can have the same variable and use it as different types.</p><p>For instance if I declare a variable as a string in JavaScript, I can later on <strong>reassign</strong> it as a number:</p><iframe height={400} src="https://repl.it/@ta_web_mad/Variables6example?lite=true" allowFullScreen="true" style={{width: '100%'}}>
          </iframe><h2 id="Summary"><a className="anchor hidden-xs" href="#Summary" title="Summary"><span className="octicon octicon-link" /></a>Summary</h2><p>In this lesson you have learnt how variables behave in Javascript, how to create them and assign values. We have also learned about dynamic variables and how we can manipulate them.</p><h2 id="Extra-Resources"><a className="anchor hidden-xs" href="#Extra-Resources" title="Extra-Resources"><span className="octicon octicon-link" /></a>Extra Resources</h2><ul>
            <li><a href="http://webcheatsheet.com/javascript/variables.php" target="_blank">Variables Cheat Sheet</a></li>
            <li><a href="http://www.javascript-coder.com/tutorials/javascript-variables.phtml" target="_blank">Understanding Javascript Variables</a></li>
          </ul></div>
        <div className="ui-toc dropup unselectable hidden-print" style={{display: 'none'}}>
          <div className="pull-right dropdown">
            <a id="tocLabel" className="ui-toc-label btn btn-default" data-toggle="dropdown" href="#" role="button" aria-haspopup="true" aria-expanded="false" title="Table of content">
              <i className="fa fa-bars" />
            </a>
            <ul id="ui-toc" className="ui-toc-dropdown dropdown-menu" aria-labelledby="tocLabel">
              <div className="toc"><ul className="nav"><li className><a href="#Variables" title="Variables">Variables</a><ul className="nav"><li className><a href="#Learning-Goals" title="Learning Goals">Learning Goals</a></li><li><a href="#Introduction" title="Introduction">Introduction</a></li><li><a href="#What-is-a-variable" title="What is a variable?">What is a variable?</a><ul className="nav"><li><a href="#Name" title="Name">Name</a></li><li><a href="#Value" title="Value">Value</a></li></ul></li><li><a href="#Declaring-a-Variable" title="Declaring a Variable">Declaring a Variable</a></li><li><a href="#Names" title="Names">Names</a><ul className="nav"><li><a href="#Naming-variables" title="Naming variables">Naming variables</a></li></ul></li><li className><a href="#Changing-Values" title="Changing Values">Changing Values</a><ul className="nav"><li className><a href="#Dynamic-Typing" title="Dynamic Typing">Dynamic Typing</a></li></ul></li><li><a href="#Summary" title="Summary">Summary</a></li><li className><a href="#Extra-Resources" title="Extra Resources">Extra Resources</a></li></ul></li></ul></div><div className="toc-menu"><a className="expand-toggle" href="#">Expand all</a><a className="back-to-top" href="#">Back to top</a><a className="go-to-bottom" href="#">Go to bottom</a></div>
            </ul>
          </div>
        </div>
        <div id="ui-toc-affix" className="ui-affix-toc ui-toc-dropdown unselectable hidden-print" data-spy="affix" style={{top: 17, display: 'none'}}>
          <div className="toc"><ul className="nav"><li className><a href="#Variables" title="Variables">Variables</a><ul className="nav"><li className><a href="#Learning-Goals" title="Learning Goals">Learning Goals</a></li><li><a href="#Introduction" title="Introduction">Introduction</a></li><li><a href="#What-is-a-variable" title="What is a variable?">What is a variable?</a><ul className="nav"><li><a href="#Name" title="Name">Name</a></li><li><a href="#Value" title="Value">Value</a></li></ul></li><li><a href="#Declaring-a-Variable" title="Declaring a Variable">Declaring a Variable</a></li><li><a href="#Names" title="Names">Names</a><ul className="nav"><li><a href="#Naming-variables" title="Naming variables">Naming variables</a></li></ul></li><li className><a href="#Changing-Values" title="Changing Values">Changing Values</a><ul className="nav"><li className><a href="#Dynamic-Typing" title="Dynamic Typing">Dynamic Typing</a></li></ul></li><li><a href="#Summary" title="Summary">Summary</a></li><li className><a href="#Extra-Resources" title="Extra Resources">Extra Resources</a></li></ul></li></ul></div><div className="toc-menu"><a className="expand-toggle" href="#">Expand all</a><a className="back-to-top" href="#">Back to top</a><a className="go-to-bottom" href="#">Go to bottom</a></div>
        </div>
        </div>
  );
}